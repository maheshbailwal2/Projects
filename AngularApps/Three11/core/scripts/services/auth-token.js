// Generated by CoffeeScript 1.9.2
(function() {
  define(['lodash'], function(_) {
    return function($window) {
      var defineProperty, enumerable, fn, i, key, keys, len, obj, theService, timeStampKey;
      theService = {};
      obj = Object;
      defineProperty = _.bind(obj.defineProperty, null, theService);
      enumerable = {
        enumerable: true
      };
      keys = ['value', 'validFor', 'type'];
      fn = function(key) {
        var theProperty;
        theProperty = _.extend({
          get: function() {
            return $window.localStorage[key];
          },
          set: function(value) {
            return $window.localStorage[key] = value;
          }
        }, enumerable);
        defineProperty(key, theProperty);
      };
      for (i = 0, len = keys.length; i < len; i++) {
        key = keys[i];
        fn(key);
      }
      defineProperty('clear', {
        value: function() {
          var j, len1;
          for (j = 0, len1 = keys.length; j < len1; j++) {
            key = keys[j];
            delete $window.localStorage[key];
          }
        }
      });
      timeStampKey = 'timeStamp';
      defineProperty(timeStampKey, _.extend({
        value: function() {
          $window.localStorage[timeStampKey] = Date.now();
          return this;
        }
      }, enumerable));
      defineProperty('isStale', {
        get: function() {
          var now, timeStamp;
          timeStamp = $window.localStorage[timeStampKey];
          if (!timeStamp) {
            return false;
          }
          now = Date.now();
          return (now - timeStamp) >= this.validFor;
        }
      });
      defineProperty('isLoggedIn', {
        get: function() {
          return (this.value != null) && (this.type != null) && (this.validFor != null) && !this.isStale;
        }
      });
      return theService;
    };
  });

}).call(this);
