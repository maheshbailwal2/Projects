// Generated by CoffeeScript 1.9.2
(function() {
  var $window, assert, check;

  $window = this;

  check = function(condition, message) {
    if (!condition) {
      if ($window.MV_BREAK_ON_FAILED_ASSERT) {
        debugger;
      }
      throw new Error(message);
    }
  };

  assert = function(condition, message) {
    return assert["true"](condition, message);
  };

  assert["true"] = function(condition, message) {
    return check(condition, message);
  };

  assert["false"] = function(condition, message) {
    return assert["true"](!condition, message);
  };

  assert.isInRange = function(candidate, lowerBound, upperBound, message) {
    check((candidate != null) || (lowerBound != null) || (upperBound != null), "Assert.isInRange: Undefined/null argument");
    check(lowerBound <= upperBound, "Assert.isInRange: lowerBound must be less than or equal to upperBound");
    return check((lowerBound <= candidate && candidate < upperBound), message);
  };

  assert.isObjectInstance = function(candidate, message) {
    assert["false"]((_.isUndefined(candidate)) || (_.isNull(candidate)) || !(_.isObject(candidate)), message);
    return true;
  };

  assert.isFunction = function(candidate, message) {
    assert.isObjectInstance(candidate, message);
    assert["true"](_.isFunction(candidate, message));
    return true;
  };

  define(['lodash'], function() {
    return assert;
  });

}).call(this);
